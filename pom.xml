<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>de.thb</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>uebung-spring-boot</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>17</java.version>
  		<sonar.organization>lars-gentsch-thb</sonar.organization>
  		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-surefire-plugin</artifactId>
	        <version>3.2.2</version>
	        <configuration>
	             <includes>
	                 <include>**/*Tests.*</include>
	             </includes>
	        </configuration>
	    </plugin>

			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-failsafe-plugin</artifactId>
			    <version>3.2.2</version>
			    <configuration>
			        <includes><include>**/*IT.*</include></includes>
			    </configuration>
			    <executions>
			        <execution>
			            <goals>
			                <goal>integration-test</goal>
			                <goal>verify</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>

			<plugin>
			  <groupId>org.jacoco</groupId>
			  <artifactId>jacoco-maven-plugin</artifactId>
			  <version>0.8.11</version>
				<executions>
						<execution>
							<id>default-prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>default-prepare-agent-integration</id>
							<goals>
								<goal>prepare-agent-integration</goal>
							</goals>
						</execution>
						<execution>
							<id>default-report</id>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
						<execution>
							<id>default-report-integration</id>
							<goals>
								<goal>report-integration</goal>
							</goals>
						</execution>
						<execution>
							<id>default-check</id>
							<goals>
								<goal>check</goal>
							</goals>
							<configuration>
							 <includes>
									 <include>**/*Tests.*</include>
									 <include>**/*IT.*</include>
							 </includes>
								<rules>
									<rule>
										<element>BUNDLE</element>
										<limits>
											<limit>
												<counter>COMPLEXITY</counter>
												<value>COVEREDRATIO</value>
												<minimum>0.60</minimum>
											</limit>
										</limits>
									</rule>
								</rules>
							</configuration>
						</execution>
					</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.3.1</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>10.12.7</version>
					</dependency>
				</dependencies>

				<configuration>
					<configLocation>checkstyle.xml</configLocation>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<linkXRef>false</linkXRef>
				</configuration>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<goals>
							<goal>checkstyle</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.21.2</version> <!-- or use version from pluginManagement -->
				<configuration>
						<!-- failOnViolation is actually true by default, but can be disabled -->
						<failOnViolation>true</failOnViolation>
						<!-- printFailingErrors is pretty useful -->
						<printFailingErrors>true</printFailingErrors>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>2.41.0</version>
				<configuration>
					<!-- optional: limit format enforcement to just the files changed by this feature branch -->
					<ratchetFrom>origin/main</ratchetFrom>
					<formats>
						<!-- you can define as many formats as you want, each is independent -->
						<format>
							<!-- define the files to apply to -->
							<includes>
								<include>.gitattributes</include>
								<include>.gitignore</include>
							</includes>
							<!-- define the steps to apply to those files -->
							<trimTrailingWhitespace/>
							<endWithNewline/>
							<indent>
								<tabs>true</tabs>
								<spacesPerTab>4</spacesPerTab>
							</indent>
						</format>
					</formats>
					<!-- define a language-specific format -->
					<java>
						<!-- no need to specify files, inferred automatically, but you can if you want -->

						<!-- apply a specific flavor of google-java-format and reflow long strings -->
						<googleJavaFormat>
							<style>AOSP</style>
							<reflowLongStrings>true</reflowLongStrings>
							<groupArtifact>com.google.googlejavaformat:google-java-format</groupArtifact>
						</googleJavaFormat>
						<!-- make sure every file has the following copyright header.
                          optionally, Spotless can set copyright years by digging
                          through git history (see "license" section below) -->
						<licenseHeader>
							<content>/* (C)$YEAR */</content>  <!-- or <file>${project.basedir}/license-header</file> -->
						</licenseHeader>
					</java>
				</configuration>
				<executions>
					<execution>
						<id>spotless</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

            <!-- Container build plugin
				<plugin>
					<groupId>com.google.cloud.tools</groupId>
					<artifactId>jib-maven-plugin</artifactId>
					<version>3.4.0</version>
					<configuration>
						<to>
							<image>demo</image>
							<image>docker.io/larsgentschthb/demo-spring-maven</image>
						</to>
					</configuration>
				</plugin>
            -->
		</plugins>

	</build>

</project>
